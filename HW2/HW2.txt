HW2 by Bo Fang(bofang)

1.
4.1 Largest radix-r number

d*r^(n-1) + d*r^(n-2) + … + d*r^1 + d*r^0 is normal radix-r number
so the largest is replacing all d(i) with (r-1):
(r-1)*r^(n-1) + (r-1)*r^(n-2) + … + (r-1)*r^1 + (r-1)*r^0
=r*r^(n-1)-r^(n-1) + r*r^(n-2)-r^(n-2) + … + r*r^1-r^1 + r*r^0-r^0
=r^n-r^(n-1) + r^(n-1)-r^(n-2) + … + r^2-r^1 + r^1-r^0
=r^n (-r^(n-1)+r^(n-1)) (-r^(n-2)+ … +r^2) (-r^1+r^1) -r^0
=r^n - r^0 = r^n-1

2.
4.2 Carry bits

when adding, each position of digital in radix-r numbers are:

 first number  last number  carry position
     r-1     +    r-1     +   1
   =2r-1

so the largest number in one position is 2r-1=(r-1) + r
(r-1) will remain in original position
and r will go to next carry position which becomes 1

3.
4.3 Complement number range

When we want it as small as possible, b(N-1)=1 and b(i)=0:
             N-2
 -1*2^(N-1) + ∑0r*2^i
             i=0
=-2^(N-1)
When we want it as large as possible, b(N-1)=0 and b(i)=1:
             N-2
 -0*2^(N-1) + ∑ 1*2^i
             i=0
=2^(N-1)-1

range: -2^(N-1) to 2^(N-1)-1

4.
4.4 2's complement operation

              _                  N-2
-(b(N-1)...b0)2 = b(N-1)*2^(N-1)- ∑ b(i)*2^i
                                 i=0
                                 N-2
                = b(N-1)*2^(N-1)- ∑b(i)*2^i +2^(N-1)-2^(N-1) +1-1
                                 i=0                  N-2
                = -2^(N-1)+b(N-1)*2^(N-1) + 2^(N-1)-1 -∑b(i)2^i +1
                                       N-2    N-2     i=0
                = -(1-b(N-1))*2^(N-1) + ∑2^i -∑b(i)2^i +
                                       i=0    i=0
                                       N-2
                = -(1-b(N-1))*2^(N-1) + ∑(1-b(i))2^i +1
                                      _i=0
                =((1-b(N-1))...(1-b0))2 +1
                   __________  _
                = (b(N-1)...b0)2 +1

5.
4.5 Sign extension

with Sign extension, positive numbers are staying the same
and when operating negative numbers:
-a + -b = -(a+b)
-a - -b = -(a-b)
still the same as positive numbers and preserving their value at the same time.

6.
Using the technique presented in section 4.1, convert the following decimal numbers to binary (show your work)
107
2312
31333
97

107/2=53..1
53/2 =26..1
26/2 =13..0
13/2 =6 ..1
6/2  =3 ..0
3/2  =1 ..1
1/2  =0 ..1
(107)10=(1111011)2

2312/2=1156..0
1156/2=578 ..0
578/2 =289 ..0
289/2 =144 ..1
144/2 =72  ..0
72/2  =36  ..0
36/2  =18  ..0
18/2  =9   ..0
9/2   =4   ..1
4/2   =2   ..0
2/2   =1   ..0
1/2   =0   ..1
(2312)10=(100100001000)2

31333/2=15666..1
15666/2=7833 ..0
7833/2 =3916 ..1
3916/2 =1958 ..0
1958/2 =979  ..0
979/2  =489  ..1
489/2  =244  ..1
244/2  =122  ..0
122/2  =61   ..0
61/2   =30   ..1
30/2   =15   ..0
15/2   =7    ..1
7/2    =3    ..1
3/2    =1    ..1
1/2    =0    ..1
(31333)10=(111101001100101)2

97/2=48..1
48/2=24..0
24/2=12..0
12/2=6 ..0
6/2 =3 ..0
3/2 =1 ..1
1/2 =0 ..1
(97)10=(1100001)2

7.
Perform the following subtraction operations using complements as described in section 4.2 (show your work)
103 - 92
1027 - 11
129 - 33
2222 - 222

103-92=103-092=103+(907+1)=011=11
1027-11=1027-0011=1027+9989=1016
129-33=129-033=129+967=096=96
2222-222=2222-0222=2222+9778=2000

8.
Convert the following decimal numbers to 8-bit two's complement (show your work)
-91
-96
-126
101
78

-91=-(64+16+8+2+1)=-(0101 1011)=1010 0100+1=1010 0101
-96=-(64+32)=-(0110 0000)=1001 1111+1=1010 0000
-126=-(64+32+16+8+4+2)=-(0111 1110)=1000 0001+1=1000 0010
101=64+32+4+1=0110 0101
78=64+8+4+2=0100 1110
